version: '3.8'

services:
  jenkins:
    build:
      context: .devcontainer
      dockerfile: Dockerfile.jenkins
      args:
        DOCKER_GID: ${DOCKER_GID}
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - shared_apps:/var/jenkins_home/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOCKER_GID: ${DOCKER_GID}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5

  liberty:
    image: openliberty/open-liberty:25.0.0.5-full-java21-openj9-ubi-minimal
    container_name: liberty
    ports:
      - "9080:9080"
      - "9443:9443"
    volumes:
      - ./src/main/liberty/config:/opt/ol/wlp/usr/servers/defaultServer
      - shared_apps:/var/jenkins_home/workspace:ro
      - liberty_apps:/opt/ol/wlp/usr/servers/defaultServer/apps
      - ./shared-resources:/opt/ol/wlp/usr/shared/resources:ro
    environment:
      SHARED_LIB_DIR: /opt/ol/wlp/usr/shared/resources
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: tipicos_tpi135
      DB_USER: user
      DB_PASSWORD: pass
    command: ["/opt/ol/wlp/bin/server", "run", "defaultServer"]
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: tipicos_tpi135
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  jenkins_home:
  shared_apps:
  liberty_apps:
  postgres_data:
