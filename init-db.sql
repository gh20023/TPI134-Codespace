-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.combo
(
    id_combo bigint NOT NULL,
    nombre character varying(155) COLLATE pg_catalog."default",
    activo boolean,
    descripcion_publica text COLLATE pg_catalog."default",
    CONSTRAINT pk_combo PRIMARY KEY (id_combo)
);

CREATE TABLE IF NOT EXISTS public.combo_detalle
(
    id_combo bigint NOT NULL,
    id_producto bigint NOT NULL,
    cantidad integer DEFAULT 1,
    activo boolean,
    CONSTRAINT pk_combo_detalle PRIMARY KEY (id_combo, id_producto)
);

CREATE TABLE IF NOT EXISTS public.orden
(
    id_orden bigserial NOT NULL,
    fecha date DEFAULT now(),
    sucursal character varying(5) COLLATE pg_catalog."default",
    anulada boolean DEFAULT false,
    CONSTRAINT pk_orden PRIMARY KEY (id_orden)
);

CREATE TABLE IF NOT EXISTS public.orden_detalle
(
    id_orden bigint NOT NULL,
    id_producto_precio bigint NOT NULL,
    cantidad integer NOT NULL DEFAULT 1,
    precio numeric(6, 2),
    observaciones text COLLATE pg_catalog."default",
    CONSTRAINT pk_orden_detalle PRIMARY KEY (id_orden, id_producto_precio)
);

CREATE TABLE IF NOT EXISTS public.pago
(
    id_pago bigserial NOT NULL,
    id_orden bigint,
    fecha date DEFAULT now(),
    metodo_pago character varying(10) COLLATE pg_catalog."default" DEFAULT 'EFECTIVO'::character varying,
    referencia text COLLATE pg_catalog."default",
    CONSTRAINT pk_pago PRIMARY KEY (id_pago)
);

CREATE TABLE IF NOT EXISTS public.pago_detalle
(
    id_pago_detalle bigserial NOT NULL,
    id_pago bigint,
    monto numeric(6, 2),
    observaciones text COLLATE pg_catalog."default",
    CONSTRAINT pk_pago_detalle PRIMARY KEY (id_pago_detalle)
);

CREATE TABLE IF NOT EXISTS public.producto
(
    id_producto bigserial NOT NULL,
    nombre character varying(155) COLLATE pg_catalog."default",
    activo boolean DEFAULT true,
    observaciones text COLLATE pg_catalog."default",
    CONSTRAINT pk_producto PRIMARY KEY (id_producto)
);

COMMENT ON TABLE public.producto
    IS 'Productos disponibles para consumo';

CREATE TABLE IF NOT EXISTS public.producto_detalle
(
    id_tipo_producto integer NOT NULL,
    id_producto bigint NOT NULL,
    activo boolean DEFAULT true,
    observaciones text COLLATE pg_catalog."default",
    CONSTRAINT pk_producto_detalle PRIMARY KEY (id_tipo_producto, id_producto)
);

COMMENT ON TABLE public.producto_detalle
    IS 'Determina los tipos de producto que aplican para un producto';

CREATE TABLE IF NOT EXISTS public.producto_precio
(
    id_producto_precio bigserial NOT NULL,
    id_producto bigint,
    fecha_desde date DEFAULT now(),
    fecha_hasta date,
    precio_sugerido numeric(8, 2),
    CONSTRAINT pk_producto_precio PRIMARY KEY (id_producto_precio)
);

CREATE TABLE IF NOT EXISTS public.tipo_producto
(
    id_tipo_producto serial NOT NULL,
    nombre character varying(155) COLLATE pg_catalog."default" NOT NULL,
    activo boolean DEFAULT true,
    observaciones text COLLATE pg_catalog."default",
    CONSTRAINT pk_tipo_producto PRIMARY KEY (id_tipo_producto)
);

COMMENT ON TABLE public.tipo_producto
    IS 'Califica los tipos de productos';

ALTER TABLE IF EXISTS public.combo_detalle
    ADD CONSTRAINT fk_combo_detalle_combo FOREIGN KEY (id_combo)
    REFERENCES public.combo (id_combo) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS fki_combo_detalle_combo
    ON public.combo_detalle(id_combo);


ALTER TABLE IF EXISTS public.combo_detalle
    ADD CONSTRAINT fk_combo_detalle_producto FOREIGN KEY (id_producto)
    REFERENCES public.producto (id_producto) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS fki_fk_combo_detalle_producto
    ON public.combo_detalle(id_producto);


ALTER TABLE IF EXISTS public.orden_detalle
    ADD CONSTRAINT fk_orden_detalle_orden FOREIGN KEY (id_orden)
    REFERENCES public.orden (id_orden) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.orden_detalle
    ADD CONSTRAINT fk_orden_detalle_producto_precio FOREIGN KEY (id_producto_precio)
    REFERENCES public.producto_precio (id_producto_precio) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.pago
    ADD CONSTRAINT fk_pago_orden FOREIGN KEY (id_orden)
    REFERENCES public.orden (id_orden) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pago_detalle
    ADD CONSTRAINT id_pago_detalle_pago FOREIGN KEY (id_pago)
    REFERENCES public.pago (id_pago) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fk_producto_detalle_producto FOREIGN KEY (id_producto)
    REFERENCES public.producto (id_producto) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fk_producto_detalle_tipo_producto FOREIGN KEY (id_tipo_producto)
    REFERENCES public.tipo_producto (id_tipo_producto) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.producto_precio
    ADD CONSTRAINT fk_producto_precio_producto FOREIGN KEY (id_producto)
    REFERENCES public.producto (id_producto) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;

END;